git log --oneline
starship preset no-empty-icons -o ~/.config/starship.toml
starship preset gruvbox-rainbow -o ~/.config/starship.toml
code daily/Aug26.cc
code daily/Aug27.cc
find
xargs
vi format.sh
make format
mv .curlrc .curlrc.bak
vim format
vim CMakeLists.txt
brew install neofetch
cd zsh/
cd Python/
rm .zshenv
la -a
ln -s ~/.config/zsh/.zshenv ~/.zshenv
ls -a
mkdir .local
cd .local/share/
mkdir zsh
git clone git@github.com:zsh-users/zsh-syntax-highlighting.git
git clone git@github.com:zsh-users/zsh-autosuggestions.git
git clone git@github.com:zsh-users/zsh-history-substring-search.git
ls -al
v
vim ~/.config/zsh/.zshrc
cd .local/share/zsh/
git clone git@github.com:junegunn/fzf.git
vim .config/zsh/function.zsh
rm -rf brew-install/
echo $TERM
cd thems
cd themes/
vim gruvbox_material_dark_medium.conf
kitty +kitten themes
cd .vim
cd autoload/
cd plugged/
cd vim-airline-themes/

rnager
mv keymap.zsh keymap.zsh.bak
cd .config/zsh
grep
cd star
p
vim starship.toml
cd devs
ll
vim ~/.gitconfig
code ~/.gitconfig
git add daily/Aug27.cc
vim .curlrc
git clone --depth=1 https://github.com/Mark24Code/rime-auto-deploy.git --branch latest\

./installer.rb
cd Rime
mv squirrel.custom.yaml squirrel.custom.yaml.bak
code squirrel.custom.yaml
mv weasel.custom.yaml weasel.custom.yaml.bak
code weasel.custom.yaml
Vim default.yaml
code /tmp/cache.cc
cd Library/Rime
vim default.custom.yaml
vim default.yam
vim default.
mv trash/default.yaml ../
vim default.yaml
code default.yaml
cp /tmp/cache.cc Documents/cache.cc
code daily/Aug30.cc
code cpp/LFU-LRU.cpp
clang-format --version
man ipc
man pipe
echo 'export PATH="'"$(python3 -m site --user-base)"'/bin:$PATH"' >> ~/.zshenv\

hg version
python3 -m pip install --user mercurial
python3
source .zshenv
cd firefox/
du
which du
cd mozilla-unified/
cd firefox/mozilla-unified/
hg up -C central
./mach clobber
./mach build
htop
mach run
which mach
source .pyvenv/bin/activate
cd rime-auto-deploy/
rm -rf rime-auto-deploy/
cd .mozbuild/
dust -r -d 2
cd .
mkdir clox
curl -Ls https://raw.githubusercontent.com/daipeihust/im-select/master/install_mac.sh | sh
which im-select
mkdir src
mkdir include
code .clang-format
mkdir buil
rmdir buil
cp compile_commands.json ../
code ../include/debug.h
code ../src/debug.c
git diff cpp/LFU-LRU.cpp
git reset --hard HEAD
code daily/Aug31.cc
code daily/Sep2.cc
vim .forma
vim .format.sh
la
vim format.s
vim format.sh
$ git clone --bare git@github.com:cmu-db/bustub.git bustub-public
git clone --bare git@github.com:cmu-db/bustub.git bustub-public
cd bustub-public/
git push git@github.com:auckerlab/bustub24 master
rm -rf bustub-public/
git clone git@github.com:auckerlab/bustub24
cd bustub24
$ git remote add public https://github.com/cmu-db/bustub.git
git remote add public git@github.com:cmu-db/bustub.git
git remote -v
git pull public master
kitty --version
build_support/packages.sh
go version
vim /tmp/test.py
python
python /tmp/test.py
source ~/.pyvenv/bin/activate
git pull
cd /usr/share/
which clang
cd /opt/homebrew/
make add
./format.sh
vim daily/Sep8.cc
brew list 
brew uninstall v2raya
brew uninstall v2ray
rm -rf /opt/homebrew/etc/v2ray
cd /opt/homebrew/etc/
cd v2ray
mas upgrade
code daily/Sep13.cc
mkdir 15445
mkdir placeholder
brew install duckdb
neofetch
curl -L https://raw.githubusercontent.com/Kyle-Ye/XcodeLLMEligible/release/0.2/scripts/override.sh | bash -s -- install util greymatter
csrutil disable
sudo csrutil disable
sudo nvram boot-args="amfi_get_out_of_my_way=1"
l 
chmod +x eligibility_util
./eligibility_util forceDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_GREYMATTER --answer 4
./eligibility_util forceDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_XCODE_LLM --answer 4
xcode --version
./eligibility_util_sip getDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_GREYMATTER
./eligibility_util getDomainAnswer --domain-name OS_ELIGIBILITY_DOMAIN_GREYMATTER
csrutil status
select
select * from sip_config
sudo nvram -d boot-args
cmake --versio
cmake --version
code daily/Sep14.cc
clang++ --version
clang --version
xcode-select install
ssh
2uaoklw7kDpvbX6wlGEWYGzJ1jznrcqNPu1ilIEHFR5uhoIjaV0hCpLlG6vB2LVSY1shFXJAL6wIi7W5ufyFHO7GS5uTKMLb411yUlRwrWfdaTobKuVgx9Yuw07U4rhFyOSVTOOn9TKZyn1XJx0hMSBU5a3925c9Uns4ftrodwyLFiFIVZpZxsdxIiakLvKkbGoHDxQbf01PGfd7WnORc0U/we3KOp+Z7EsJZjLNpFfzm0aHr43J0RrmG5o
v4J70SBwIZw21cPUfswtw468ViAXMQLXc95mhJy5OWBV5gcJLdu3t//1FblQKpRLyJ8di4eJMtJ/6sRqUzhihpO/HoyPBot+96XTF0KbkMjBbUsIS+JFqYZ+c0bWp4xAw8T4jJNnOoYBbMJ0Ow6A+ME5AfnSNOqDlwKdgYmY/Ccxx4DGaPmoZgBWOKTAimt9vvAwTCHGnPAroj4wH1KPAnquCR3plPOTHFgh4DC7j0KHUIF7j2aN+VFmoJamBY
xCDmwHBMKhicF0QtVetfx+s0FhYOPg/Zj++fxQUZuXCheFRoDovsXlsOcE/qU0JPfc8AnkLcPnAc6HQckPwZVC60L0ENcYtRlGZW9CztIFGaenYshWp2mA55i3iVUI5DBoeiVAKVmCw1f7sWF2huJ2UZ1icfxqd9Ck4Rv8+ZRDAgrkeYoJZ5d+TPD9wh7Xl0LOZm6g0PX6GvRyqJnwPuxT+LJDyEKcwm/s1gYrmZV0krLJtPDV5Bk9QvaZdIlS
4s1fOocZz7NWadjnB2kutLKk9coER5REl8MdNNz+BUvCJxBHNsomZo/TGtxMtQ3o+VjwyMSGsFjj4JupvVUmKzFG97tuEcc+J6yFsTWZISQAp6kYg+eztdj5AVoZrE+6RlurAJr0nSZv0NqXZ6jqt7ZqdXFZNwgjKUwoMyf0A9AoVFg4FVo0T53ZoNJCAFzeeUCIYpFk+xdsDi2mce94nhHQVDsQzBZhElUgOx1D4UWvmNcAnXJUTfJUPjmJJw
NxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtm16NxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINutNxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINuDNxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbINxGtmbIN+m
mv id_ed25519.pub ~/.ssh/
cd kitty/
vim function.zsh
which ssh
ssh aucker@192.168.0.112
code daily/Sep16.cc
git commit -a
git commit --amend
 ls -lt /private/var/db/ | tail -3
sudo  ls -lt /private/var/db/ | tail -3
brew install stats
brew install youtube-dl
brew uninstall youtube-dl
code daily/Sep19.cc
git add *(\

git commit 
cd lasbs
cd labs/15445/
cd placeholder/
wget https://15445.courses.cs.cmu.edu/fall2024/files/olympics-cmudb2024.db.gz
md5sum olympics-cmudb2024.db.gz
gzip -d olympics-cmudb2024.db.gz
sqlite3
sqlite3 olympics-cmudb2024.db
INSTALL sqlite
INSTALL sqlite;
INSTALL sqlite;\
LOAD sqlite;
duckdb
duckdb olympics-cmudb2024.db
vim .zsh_history
mv „ÄÉ∞ÂÉ≠ÉÆÁÉÅÉµÁßÉ±ÊÉ™Ä\(ËÉ´ÉØÂ∑Éæ\)ÊÉºÉ©ÈÉπÉ∞ÂÉ•¨ÂÉØ∏„ÄÉ±ÂΩÉµÁÉ¥®ÈÄÉ∫ÁÉø•‰π¶-ÂÆÉ©ÂÆ∂Â∫É¶.pdf ASUS-aucker.pdf
mv Â§ßËµÉªÊÉ™•ÂÉ∞É≠ÊÉ©øËØ∫‰π¶.docx competition.docx
lf
cd 15445/
code memory-disk.md
lsof -i | grep nsurlsessiond
which lsof
sudo lsof -i | grep nsurlsessiond
sudo lsof -nP | grep nsurlsessiond
vim /etc/hosts
cd clox-xcode/
cd labs/clox
code CMakeLists.txt
cd ../clox-xcode/
rm -rf clox-xcode/
vim id_ed25519
vim id_ed25519.pub
git clone git@github.com:LearningOS/rust-rustlings-2024-autumn-aucker.git
cargo install --force --path .
cargo --version
vim $CARGO_HOME/config
cd $CARGO_HOME
mkdir .cargo
cd .cargo
cd config
cd .config/zsh/
git init
vim .gitignore
code .gitignore
git add .clang-format .gitignore
vim .config/zsh/.zshrc
source .config/zsh/.zshrc
source .profile
rustup update
cd .cargo/
vim config
mv config config.toml
mv config.toml Cargo.toml
mv  Cargo.toml config.toml
cd labs/rust-rustlings-2024-autumn-aucker/
cargo update
cd build/
make 
git add *
vi
cd Downloads/
7zz x trash.7z -pprivate
man 7zz
7zz a trasharchive.7z trash/ -pprivate
7zz a trasharchive.7z trash/ -pprivate -mx0
cd trash/
tar -czvf trash.tar.gz *
mv trash/ .trash
cl
cd v2raya/
brew status
softwareupdate --install-rosetta --agree-to-license
brew install cmake-docs
code
code daily/Sep29.cc
ld
git clone git@github.com:torvalds/linux
cd .ssh
vi config
sl
code daily/Oct10.cc
git add 
code daily/Oct11.cc
python --version
code daily/Oct13.cc
clang -g -o test test.cc
clang -g -o test test.cc --std=c++17
clang++ -g -o test test.cc --std=c++17
./test
git add daily/Oct11.cc
mkdir RD
git clone https://github.com/intel/ecfw-zephyr.git
cd ecfw-zephyr/
man execve
tldr execve
cd rd
cc -g -o forkt forkt.c
vim forkt.
vim forkt.c
./forkt | wc -l
./forkt
lldb ./forkt
tldr lldb
cd labs/bustub24/
cd linux-master/
make htmldocs
make --version
vim .qa
mv .qa .qa.md
vim .qa.md
code daily/Oct16.cc
git commimt
cd labs/leetcode
code daily/Oct17.c
code daily/Oct17.cc
mkdir termder
cd termder/
mv termder/ galilee-cli
launchctl print-disabled system
ps aux | grep SMC
cd libar
sudo rm -rf /Library/LaunchDaemons/eu.exelban.Stats.SMC.Helper.plist\
sudo rm -rf /Library/PrivilegedHelperTools/eu.exelban.Stats.SMC.Helper
cd rust-rustlings-2024-autumn-aucker/
code daily/Oct18.cc
git clone git@github.com:tokio-rs/tokio.git
which cc
cc --version
cc -V
cc -v
cd galilee-cli/
./galilee
rustlings help
rustlings run
rustlings list
rustlings verify
rustlings watch
xcode-select -p
xcode-select --version
vim .gitconfig
brew tap LizardByte/homebrew
brew install sunshine
cd leetcode/
code daily/Oct20.cc
code daily/Oct21.cc
which gc
which gp
code daily/Oct22.cc
git push
gdb
lldb
code test.cc
cc -g -o test -std=c++17 test.cc
code daily/Oct30.cc
git add .
code .
vim /tmp/test.c
code /tmp/test.c
man signal
code /tmp/test.C
code /tmp/test1.C
man am
objdump -h "$(which clang)"
code test.ld
code test.c
code test.rs
code extern.c
clang -c extern.c
ar rc libextern.a extern.o
nm libextern.a
man nm
man ar
code run.c
clang -c run.c
man clang
man gcc
man cc
nm run.o
clang run.o
clang -v run.o
which ld
clang run.o -L. -lextern -nostartfiles
cd /usr/
cd bin
xcode-select --install
find /Applications/Xcode.app -name stdio.h
locate stdio.h
cd 
cd labs
cd clox/
rm -rf build
rm compile_commands.json
cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON .
brew upgrad
clear
cd build
git add ../include/*
which ga
git add ../src/* ../include/*
git commit
git add ../src/*
code Notes.md
make -j nproc
make -jnproc
vim Makefile
vim ../CMakeLists.txt
cmake .
vim .vimrc
ppwd
cd Documents/
code padding.c
cc -g -o padding padding.c
code padding.rs
rustc padding
rustc padding.rs
code padding.swift
swiftc padding.swift -o padding
./padding
vim
vim padding.rs
vim padding.swift
cd Movies/
rm -rf .
rm -rf .trash/
ping baidu.com
c
Vim .myserial
code /tmp/1117.cc
git add ../include/* ../src/*
s
git add ../.clang-format ../CMakeLists.txt ../Notes.md ../compile_commands.json
git log
code daily/Nov17.cc
cd daily/
code test.java
code test.py
code daily/Nov18.cc
code daily/Nov20.cc
code daily/Nov21.cc
ping aliyun.corner430.eu.org
cd Library/
range
ranger
cd .Trash/
sudo su
ls -ld ./
ls -ld ./.Trash
pwd
ifconfig
ipconfig getifaddr en1
ipconfig getifaddr en0
whereis cc
whereis gcc
ls -l /usr/bin/gcc
git log 
cd ..
rm -rf build/
mkdir build
cd build 
ssh root@107.172.217.141
ping corner430.eu.org
ping 8.221.139.11
ssh root@8.221.139.11
g
cmake ..
make
./clox
cd labs/leetcode/
gac
code daily/Nov30.cc
code daily/Nov30.rs
ping 74.48.204.34
code daily/Dec1.cc
git status
gl
which gl
ping 23.95.20.207
ssh root@23.95.20.207
cd .config/
vim .myserial
ssh aucker@74.48.204.34
code daily/Dec4.cc
mkdir .sec
cd .sec
cd clox
git remote add origin git@github.com:auckerlab/clox.git
git branch -M main
git push -u origin main
gs
gp
brew upgrade
brew install emacs
emacs .myserial
uname - a
uname -a
cd /tmp
emacs sample.c
emacs include/object.h
ga
gc
cd .sec/
vim .myvidurl
cd labs/
mkdir AdventOfCode
cd advn
cd AdventOfCode/
mkdir 2024
cd 2024/
vim 8.py
code 8.py
python3 --version
cd .zsh
cd .config
cd zsh
ls
l
vim .zshrc
vim .zshenv
cd
export HOMEBREW_BREW_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git"\
export HOMEBREW_CORE_GIT_REMOTE="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git"\
export HOMEBREW_INSTALL_FROM_API=1
source .zprofile
brew update
brew install python
vim .profile
vim .zprofile
: 1733674860:0;vim .profile
: 1733674870:0;brew info python
: 1733674875:0;python
: 1733675144:0;brew update
: 1733675267:0;ls
: 1733675271:0;vim 8.in
: 1733675306:0;python3 8.py 8.in
: 1733675392:0;cd ..
: 1733675392:0;ls
: 1733675394:0;cd ..
: 1733675395:0;ls
: 1733675422:0;python3 -m venv myvenv
: 1733675434:0;source myvenv/bin/activate
: 1733675438:0;python
: 1733675444:0;cd AdventOfCode/
: 1733675445:0;ls
: 1733675447:0;cd 2024/
: 1733675448:0;ls
: 1733675455:0;python 8.py 8.in
: 1733675459:0;pip install pyperclip
: 1733675469:0;python 8.py 8.in
: 1733675476:0;pip install pypy
: 1733675480:0;pip install pypy3
: 1733675511:0;vim 8.in
: 1733675526:0;python 8.py 8.in
: 1733675637:0;time python 8.py 8.in
: 1733676150:0;which python3
: 1733676156:0;which python
: 1733676159:0;which python3
: 1733676515:0;ls
: 1733676520:0;code 8.rs
: 1733676535:0;rustc 8.rs
: 1733676538:0;ls
: 1733676540:0;./8
: 1733704177:0;cd .config
: 1733704177:0;ls
: 1733704182:0;cd ..
: 1733704183:0;ls
: 1733704187:0;cd config/
: 1733704188:0;ls
: 1733704192:0;git status
: 1733704208:0;cp -r ~/.config/zsh ./
