{
    "editor.fontSize": 16,
    "terminal.integrated.fontSize": 16,
    "files.autoSave": "afterDelay",
    "editor.formatOnSave": false,
    "editor.formatOnPaste": false,
    "editor.semanticHighlighting.enabled": true,
    // "editor.renderWhitespace": "all",
    // the following configuration is for senmantic highlighting of rust
    "editor.semanticTokenColorCustomizations": {
        "enabled": true,
        "rules": {
            "*.mutable": {
                "fontStyle": "", // underline is the default
            }
        }
    },
    "diffEditor.ignoreTrimWhitespace": true,
    "explorer.confirmDragAndDrop": false,
    "security.workspace.trust.untrustedFiles": "open",
    "editor.fontLigatures": true,

    "todo-tree.general.tags": [
        "-",
        "!",
        "?",
        ">",
        "TODO",
        "FIXME"
    ],
    "todo-tree.general.statusBar": "tags",
    "todo-tree.highlights.customHighlight": {
        "-": {
            "background": "#222",
            "foreground": "#6D8CB4",
            "iconColour": "#6D8CB4",
            "icon": "check",
            "type": "text-and-comment",
            "hideFromTree": true
        },
        "!": {
            "background": "#222",
            "foreground": "#d9444a",
            "iconColour": "#d9444a",
            "icon": "check",
            "type": "text-and-comment",
            "hideFromTree": true
        },
        "?": {
            "background": "#222",
            "foreground": "#f5c018",
            "iconColour": "#f5c018",
            "icon": "check",
            "type": "text-and-comment",
            "hideFromTree": true
        },
        ">": {
            "background": "#222",
            "foreground": "#fff",
            "iconColour": "#fff",
            "icon": "check",
            "type": "text-and-comment",
            "hideFromTree": true
        },
        "TODO": {
            "background": "#f5c018",
            "foreground": "#000",
            "iconColour": "#f5c018",
            "icon": "check",
            "type": "text-and-comment"
        },
        "FIXME": {
            "background": "#d9444a",
            "foreground": "#000",
            "iconColour": "#d9444a",
            "type": "text-and-comment"
        }
    },

    // log config
    "files.associations": {
        "*.err": "log"
    },
    "editor.tokenColorCustomizations": {
        "textMateRules": [
            {
                "scope": "log.error",
                "settings": {
                    "foreground": "#af1f1f",
                    "fontStyle": "bold"
                }
            },
            {
                "scope": "log.warning",
                "settings": {
                    "foreground": "#f4ad42",
                    "fontStyle": ""
                }
            },
            {
                "scope": "log.info",
                "settings": {
                    "foreground": "#1dc96a",
                    "fontStyle": ""
                }
            }
        ]
    },
    "editor.fontFamily": "Fira Code, Cascadia Code",
    "terminal.integrated.fontFamily": "Hack Nerd Font",
    "editor.inlineSuggest.enabled": true,
    "C_Cpp.clang_format_fallbackStyle": "Google",
    /*----------------------------------vim------------------------------------*/
    // below are the settings for vscodevim
    "vim.highlightedyank.enable": true,
    "vim.easymotion": true,
    "vim.incsearch": true,
    "vim.autoindent": true, // don't know what is autoindent
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.hlsearch": true,
    "vim.surround": true, // surround text with quotes, parentheses, etc.
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "j",
                "j"
            ],
            "after": [
                "<Esc>"
            ]
        }
    ],
    "vim.normalModeKeyBindings": [
        // bind `;` to show the command pallette, and don't show the message on the status bar
        {
            "before": [
                "<C-p>"
            ],
            "commands": [
                // "workbench.action.showCommands",
                "workbench.action.quickOpen"
            ],
            "silent": true
        },
        // bind `;` to `:` in normal mode
        {
            "before": [";"],
            "after": [":"]
        },
        // bind `ctrl+h` to trun off highlight search
        {
            "before": [
                "<C-h>"
            ],
            "commands": [
                ":nohl"
            ]
        },
        // bind `<leader>w` to save the file
        {
            "before": [
                "<leader>",
                "w"
            ],
            "commands": [
                "workbench.action.files.save"
            ]
        },
        // bind `<leader>c` to close the file
        {
            "before": [
                "<leader>",
                "q"
            ],
            "commands": [
                "workbench.action.closeActiveEditor",
            ]
        },
    ],
    "vim.visualModeKeyBindings": [
        //  bind `>` and `<` to indent and outdent lines
        {
            "before": [
                ">"
            ],
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": [
                "<"
            ],
            "commands": [
                "editor.action.outdentLines"
            ]
        },
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<leader>",
                "d"
            ],
            "after": [
                "d",
                "d"
            ]
        },
        {
            "before": [
                "<C-h>"
            ],
            "commands": [
                ":nohl"
            ]
        },
        {
            "before": [
                "K"
            ],
            "commands": [
                "lineBreakInsert"
            ],
            "silent": true
        }
    ],
    "vim.operatorPendingModeKeyBindings": [
        // Bind L to $ and H to ^ in operator pending mode makes yL and dH work like y$ and d^ respectively:
        {
            "before": [
                "L"
            ],
            "after": [
                "$"
            ]
        },
        {
            "before": [
                "H"
            ],
            "after": [
                "^"
            ]
        }
    ],
    "vim.leader": "<space>",
    "vim.handleKeys": {
        "<C-a>": false,
        "<C-f>": false
    },
    "vim.autoSwitchInputMethod.enable": true,
    "vim.autoSwitchInputMethod.defaultIM": "1033",
    "vim.autoSwitchInputMethod.obtainIMCmd": "D:\\Toolchain\\im-select.exe",
    "vim.autoSwitchInputMethod.switchIMCmd": "D:\\Toolchain\\im-select.exe {im}",
    "cmake.configureOnOpen": true,
    "debug.allowBreakpointsEverywhere": true,
    "[python]": {
        "editor.formatOnType": true,
        "editor.defaultFormatter": "ms-python.black-formatter",
        "diffEditor.ignoreTrimWhitespace": true
    },
    "editor.wordWrap": "on",
    "[markdown]": {
        // "editor.defaultFormatter": ""
    },
    "git.terminalAuthentication": false,
    "workbench.iconTheme": "material-icon-theme",
    // "C_Cpp.intelliSenseEngine": "disabled",
    "[cpp]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "[c]": {
        "editor.defaultFormatter": "xaver.clang-format"
    },
    "open-in-browser.default": "chrome",
    "cmake.pinnedCommands": [
        "workbench.action.tasks.configureTaskRunner",
        "workbench.action.tasks.runTask"
    ],
    "workbench.colorTheme": "GitHub Dark Default",
    "clangd.path": "D:\\Toolchain\\clangd_18.1.3\\bin\\clangd.exe",
    "clang-format.executable": "C:\\Program Files\\LLVM\\bin\\clang-format.exe",
    "clang-format.fallbackStyle": "Google",
    "editor.tabSize": 2,
    "cmake.showOptionsMovedNotification": false,
    "C_Cpp.formatting": "disabled",
    "window.zoomLevel": -1
}
